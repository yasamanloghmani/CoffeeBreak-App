{"ast":null,"code":"var _jsxFileName = \"/Users/yasamanloghmani/Desktop/CoffeeBreak-App/CoffeeBreak-App/coffeebreak/src/pages/MainDashboard/MainDashboard.jsx\";\nimport React, { Component } from \"react\";\nimport './MainDashboard.css';\nimport coffeeService from '../../utils/coffeeService';\nimport MainHeader from '../../components/MainHeader/MainHeader';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport GroupView from '../../components/GroupView/GroupView';\n\nclass MainDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coffees: [],\n      theme: 'light',\n      sumSize: 0,\n      sumCost: 0,\n      costpercent: 0,\n      costdata: this.getData(0)\n    };\n\n    this.handleAddCoffee = async newCoffeeData => {\n      const coffees = await coffeeService.create(newCoffeeData, this.props.user.id);\n      this.setState(state => ({\n        coffees\n      }), // Using cb to wait for state to update before rerouting\n      () => this.props.history.push('/'));\n    };\n  }\n\n  getCostData(percent) {\n    return [{\n      x: 1,\n      y: percent\n    }, {\n      x: 2,\n      y: 100 - percent\n    }];\n  }\n\n  async componentDidMount() {\n    const coffees = await coffeeService.getAll(this.props.user.id);\n    console.log(coffees);\n    const sumSize = coffees.reduce(function (prev, cur) {\n      return prev + cur.size;\n    }, 0);\n    const sumCost = coffees.reduce(function (prev, cur) {\n      return prev + cur.price;\n    }, 0);\n    const percent = sumCost / this.props.user.limitOfExpense * 100;\n    this.setState({\n      coffees,\n      sumCost,\n      sumSize,\n      costpercent,\n      data: this.getCostData(percent)\n    });\n  }\n\n  async shouldComponentUpdate() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainDashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MainHeader, {\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dashboard, {\n      user: this.props.user,\n      handleAddCoffee: this.handleAddCoffee,\n      percent: this.state.percent,\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GroupView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default MainDashboard;","map":{"version":3,"sources":["/Users/yasamanloghmani/Desktop/CoffeeBreak-App/CoffeeBreak-App/coffeebreak/src/pages/MainDashboard/MainDashboard.jsx"],"names":["React","Component","coffeeService","MainHeader","Dashboard","GroupView","MainDashboard","state","coffees","theme","sumSize","sumCost","costpercent","costdata","getData","handleAddCoffee","newCoffeeData","create","props","user","id","setState","history","push","getCostData","percent","x","y","componentDidMount","getAll","console","log","reduce","prev","cur","size","price","limitOfExpense","data","shouldComponentUpdate","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './MainDashboard.css';\nimport coffeeService from '../../utils/coffeeService';\nimport MainHeader from '../../components/MainHeader/MainHeader';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport GroupView from '../../components/GroupView/GroupView';\n\n\nclass MainDashboard extends Component{\n   state = {\n    coffees : [],\n    theme : 'light',\n    sumSize : 0,\n    sumCost : 0,\n    costpercent: 0,\n    costdata: this.getData(0)\n   }\n\ngetCostData(percent) {\nreturn [{ x: 1, y: percent }, { x: 2, y: 100 - percent }];\n}\n  \n  handleAddCoffee = async newCoffeeData => {\n    const coffees = await coffeeService.create(newCoffeeData, this.props.user.id);\n    this.setState(state => ({\n      coffees\n    }),\n    // Using cb to wait for state to update before rerouting\n    () => this.props.history.push('/'));\n  }\n\n  async componentDidMount() {\n    const coffees = await coffeeService.getAll(this.props.user.id);\n    console.log(coffees);\n    const sumSize = coffees.reduce(function(prev, cur) {\n      return prev + cur.size;\n    }, 0);\n    const sumCost = coffees.reduce(function(prev, cur){\n      return prev + cur.price;\n    }, 0);\n    const percent = (sumCost / this.props.user.limitOfExpense ) *100;\n\n    this.setState({coffees, sumCost, sumSize, costpercent, data: this.getCostData(percent)});\n  }\n\n  async shouldComponentUpdate(){\n\n  }\n    render(){\n        return(\n            <div className='MainDashboard'>\n                <div className='flexLeft'>\n                <MainHeader user={this.props.user}></MainHeader>\n                <Dashboard user={this.props.user} handleAddCoffee={this.handleAddCoffee} percent={this.state.percent} data={this.state.data}>\n                </Dashboard>\n                </div>\n                <div className='flexRight'>\n                <GroupView></GroupView>\n                </div>\n                \n                \n            </div>\n        );\n    }\n}\n\nexport default MainDashboard;"]},"metadata":{},"sourceType":"module"}