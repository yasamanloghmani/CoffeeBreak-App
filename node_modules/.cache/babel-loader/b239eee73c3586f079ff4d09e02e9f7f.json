{"ast":null,"code":"import tokenService from'./tokenService';import CostChart from'../components/CostChart/CostChart';var BASE_URL='/api/groups/';function create(group){return fetch(BASE_URL,{method:'POST',headers:{'content-type':'application/json','Authorization':'Bearer '+tokenService.getToken()},body:JSON.stringify(group)}).then(function(res){if(res.ok)return res.json();throw new Error('New group could not be added.');});}function getAll(){return fetch(BASE_URL).then(function(res){return res.json();});}function getGroup(groupId){return fetch(BASE_URL+groupId).then(function(res){return res.json();});}function join(groupId){console.log(\"Join fn \",groupId);return fetch(\"\".concat(BASE_URL).concat(groupId,\"/join\"),{method:'PUT',headers:{'content-type':'application/json','Authorization':'Bearer '+tokenService.getToken()},body:JSON.stringify()}).then(function(res){return res.json();});}export default{create:create,getAll:getAll,join:join,getGroup:getGroup};","map":{"version":3,"sources":["/Users/yasamanloghmani/Desktop/CoffeeBreak-App/CoffeeBreak-App/coffeebreak/src/utils/groupService.js"],"names":["tokenService","CostChart","BASE_URL","create","group","fetch","method","headers","getToken","body","JSON","stringify","then","res","ok","json","Error","getAll","getGroup","groupId","join","console","log"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mCAAtB,CACA,GAAMC,CAAAA,QAAQ,CAAG,cAAjB,CACA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACnB,MAAOC,CAAAA,KAAK,CAACH,QAAD,CAAW,CACnBI,MAAM,CAAE,MADW,CAEnBC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,gBAAiB,UAAWP,YAAY,CAACQ,QAAb,EAFvB,CAFU,CAMnBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf,CANa,CAAX,CAAL,CAQNQ,IARM,CAQD,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACZ,KAAM,IAAIC,CAAAA,KAAJ,CAAU,+BAAV,CAAN,CACH,CAXM,CAAP,CAYF,CAEF,QAASC,CAAAA,MAAT,EAAkB,CACd,MAAOZ,CAAAA,KAAK,CAACH,QAAD,CAAL,CACNU,IADM,CACD,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACE,IAAJ,EAAJ,EADF,CAAP,CAEH,CAED,QAASG,CAAAA,QAAT,CAAkBC,OAAlB,CAA2B,CACvB,MAAOd,CAAAA,KAAK,CAACH,QAAQ,CAAGiB,OAAZ,CAAL,CACNP,IADM,CACD,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACE,IAAJ,EAAJ,EADF,CAAP,CAEH,CAED,QAASK,CAAAA,IAAT,CAAcD,OAAd,CAAuB,CACnBE,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBH,OAAxB,EACA,MAAOd,CAAAA,KAAK,WAAIH,QAAJ,SAAeiB,OAAf,UAA+B,CACzCb,MAAM,CAAE,KADiC,CAEzCC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAAoC,gBAAiB,UAAWP,YAAY,CAACQ,QAAb,EAAhE,CAFgC,CAGzCC,IAAI,CAAEC,IAAI,CAACC,SAAL,EAHmC,CAA/B,CAAL,CAIJC,IAJI,CAIC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACE,IAAJ,EAAJ,EAJJ,CAAP,CAKH,CAGD,cAAe,CACXZ,MAAM,CAANA,MADW,CAEXc,MAAM,CAANA,MAFW,CAGXG,IAAI,CAAJA,IAHW,CAIXF,QAAQ,CAARA,QAJW,CAAf","sourcesContent":["import tokenService from './tokenService';\nimport CostChart from '../components/CostChart/CostChart';\nconst BASE_URL = '/api/groups/';\nfunction create(group) {\n    return fetch(BASE_URL, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': 'Bearer '+ tokenService.getToken()\n        },\n        body: JSON.stringify(group)\n    })\n    .then(res => {\n        if (res.ok) return res.json()\n        throw new Error('New group could not be added.')\n    }\n)}\n\nfunction getAll() {\n    return fetch(BASE_URL)\n    .then(res => res.json())\n}\n\nfunction getGroup(groupId) {\n    return fetch(BASE_URL + groupId)\n    .then(res => res.json())\n}\n\nfunction join(groupId) {\n    console.log(\"Join fn \", groupId);\n    return fetch(`${BASE_URL}${groupId}/join`, {\n      method: 'PUT',\n      headers: {'content-type': 'application/json','Authorization': 'Bearer '+ tokenService.getToken()},\n      body: JSON.stringify()\n    }).then(res => res.json() );\n}\n\n\nexport default {\n    create,\n    getAll,\n    join, \n    getGroup\n}\n "]},"metadata":{},"sourceType":"module"}