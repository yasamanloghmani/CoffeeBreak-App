{"ast":null,"code":"import tokenService from'./tokenService';var BASE_URL='/api/groups/';function createPost(data,groupId){return fetch(BASE_URL+groupId+'/posts',{method:'POST',headers:{'content-type':'application/json','Authorization':'Bearer '+tokenService.getToken()},body:JSON.stringify(data)}).then(function(res){if(res.ok)return res.json();throw new Error('New post could not be added.');});}function getAllPosts(groupId){return fetch(BASE_URL+groupId+'/posts').then(function(res){return res.json();});}export default{createPost:createPost,getAllPosts:getAllPosts};","map":{"version":3,"sources":["/Users/yasamanloghmani/Desktop/CoffeeBreak-App/CoffeeBreak-App/coffeebreak/src/utils/postService.js"],"names":["tokenService","BASE_URL","createPost","data","groupId","fetch","method","headers","getToken","body","JSON","stringify","then","res","ok","json","Error","getAllPosts"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAG,cAAjB,CAGA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,OAA1B,CAAmC,CAC/B,MAAOC,CAAAA,KAAK,CAACJ,QAAQ,CAAGG,OAAX,CAAqB,QAAtB,CAAgC,CACxCE,MAAM,CAAE,MADgC,CAExCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,gBAAiB,UAAWP,YAAY,CAACQ,QAAb,EAFvB,CAF+B,CAMxCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CANkC,CAAhC,CAAL,CAQNS,IARM,CAQD,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACZ,KAAM,IAAIC,CAAAA,KAAJ,CAAU,8BAAV,CAAN,CACH,CAXM,CAAP,CAYF,CAEF,QAASC,CAAAA,WAAT,CAAqBb,OAArB,CAA8B,CAC1B,MAAOC,CAAAA,KAAK,CAACJ,QAAQ,CAAEG,OAAV,CAAoB,QAArB,CAAL,CACNQ,IADM,CACD,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACE,IAAJ,EAAJ,EADF,CAAP,CAED,CAIH,cAAe,CACXb,UAAU,CAAVA,UADW,CAEXe,WAAW,CAAXA,WAFW,CAAf","sourcesContent":["import tokenService from './tokenService';\nconst BASE_URL = '/api/groups/';\n\n\nfunction createPost(data, groupId) {\n    return fetch(BASE_URL + groupId + '/posts', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': 'Bearer '+ tokenService.getToken()\n        },\n        body: JSON.stringify(data)\n    })\n    .then(res => {\n        if (res.ok) return res.json()\n        throw new Error('New post could not be added.')\n    }\n)}\n\nfunction getAllPosts(groupId) {\n    return fetch(BASE_URL+ groupId + '/posts')\n    .then(res => res.json())\n  }\n\n\n\nexport default {\n    createPost,\n    getAllPosts\n}"]},"metadata":{},"sourceType":"module"}