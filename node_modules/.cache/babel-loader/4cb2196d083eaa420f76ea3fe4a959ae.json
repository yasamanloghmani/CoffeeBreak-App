{"ast":null,"code":"import tokenService from'./tokenService';var BASE_URL='/api/users/';function signup(user){return fetch(BASE_URL+'signup',{method:'POST',headers:new Headers({'Content-Type':'application/json'}),body:JSON.stringify(user)}).then(function(res){if(res.ok)return res.json();throw new Error('Email already taken!');}).then(function(_ref){var token=_ref.token;tokenService.setToken(token);});}function getUser(){return tokenService.getUserFromToken();}function logout(){tokenService.removeToken();}export default{signup:signup,getUser:getUser,logout:logout};","map":{"version":3,"sources":["/Users/yasamanloghmani/Desktop/CoffeeBreak-App/CoffeeBreak-App/coffeebreak/src/utils/userService.js"],"names":["tokenService","BASE_URL","signup","user","fetch","method","headers","Headers","body","JSON","stringify","then","res","ok","json","Error","token","setToken","getUser","getUserFromToken","logout","removeToken"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,aAAjB,CAGA,QAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAsB,CACpB,MAAOC,CAAAA,KAAK,CAACH,QAAQ,CAAG,QAAZ,CAAsB,CAChCI,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CAAC,eAAgB,kBAAjB,CAAZ,CAFuB,CAGhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAH0B,CAAtB,CAAL,CAKNQ,IALM,CAKD,SAAAC,GAAG,CAAI,CACX,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACZ,KAAM,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,CAAN,CACD,CARM,EASNJ,IATM,CASD,cAAe,IAAZK,CAAAA,KAAY,MAAZA,KAAY,CACnBhB,YAAY,CAACiB,QAAb,CAAsBD,KAAtB,EACD,CAXM,CAAP,CAYD,CAED,QAASE,CAAAA,OAAT,EAAmB,CACjB,MAAOlB,CAAAA,YAAY,CAACmB,gBAAb,EAAP,CACD,CAED,QAASC,CAAAA,MAAT,EAAkB,CAChBpB,YAAY,CAACqB,WAAb,GACD,CAED,cAAe,CACbnB,MAAM,CAANA,MADa,CAEbgB,OAAO,CAAPA,OAFa,CAGbE,MAAM,CAANA,MAHa,CAAf","sourcesContent":["import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Email already taken!');\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  });\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nexport default {\n  signup,\n  getUser,\n  logout\n}"]},"metadata":{},"sourceType":"module"}