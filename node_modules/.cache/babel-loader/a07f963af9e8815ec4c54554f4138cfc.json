{"ast":null,"code":"import tokenService from'./tokenService';var BASE_URL='/api/coffees/';function create(coffee,userId){return fetch(BASE_URL+userId,{method:'POST',headers:{'content-type':'application/json','Authorization':'Bearer '+tokenService.getToken()},body:JSON.stringify(coffee)}).then(function(res){if(res.ok)return res.json();throw new Error('New coffee could not be added.');});}function getAll(userId){return fetch(BASE_URL+userId).then(function(res){return res.json();});}export default{create:create,getAll:getAll};","map":{"version":3,"sources":["/Users/yasamanloghmani/Desktop/CoffeeBreak-App/CoffeeBreak-App/coffeebreak/src/utils/coffeeService.js"],"names":["tokenService","BASE_URL","create","coffee","userId","fetch","method","headers","getToken","body","JSON","stringify","then","res","ok","json","Error","getAll"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAG,eAAjB,CACA,QAASC,CAAAA,MAAT,CAAgBC,MAAhB,CAAwBC,MAAxB,CAAgC,CAC5B,MAAOC,CAAAA,KAAK,CAACJ,QAAQ,CAAGG,MAAZ,CAAoB,CAC5BE,MAAM,CAAE,MADoB,CAE5BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,gBAAiB,UAAWP,YAAY,CAACQ,QAAb,EAFvB,CAFmB,CAM5BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeR,MAAf,CANsB,CAApB,CAAL,CAQNS,IARM,CAQD,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACZ,KAAM,IAAIC,CAAAA,KAAJ,CAAU,gCAAV,CAAN,CACH,CAXM,CAAP,CAYF,CAEF,QAASC,CAAAA,MAAT,CAAgBb,MAAhB,CAAwB,CACpB,MAAOC,CAAAA,KAAK,CAACJ,QAAQ,CAAEG,MAAX,CAAL,CACNQ,IADM,CACD,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACE,IAAJ,EAAJ,EADF,CAAP,CAEH,CAID,cAAe,CACXb,MAAM,CAANA,MADW,CAEXe,MAAM,CAANA,MAFW,CAAf","sourcesContent":["import tokenService from './tokenService';\nconst BASE_URL = '/api/coffees/';\nfunction create(coffee, userId) {\n    return fetch(BASE_URL + userId, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'Authorization': 'Bearer '+ tokenService.getToken()\n        },\n        body: JSON.stringify(coffee)\n    })\n    .then(res => {\n        if (res.ok) return res.json()\n        throw new Error('New coffee could not be added.')\n    }\n)}\n\nfunction getAll(userId) {\n    return fetch(BASE_URL+ userId)\n    .then(res => res.json())\n}\n\n\n\nexport default {\n    create,\n    getAll\n}\n "]},"metadata":{},"sourceType":"module"}